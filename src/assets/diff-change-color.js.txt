(() => {
function init() {
  const flowName = '{{flowName}}';
  const oldVersion = {{oldVersion}};
  const newVersion = {{newVersion}};

  const journey = document.querySelector('.flowName'); // Verifique o seletor apropriado
  if (journey != flowName) {
    console.log('Para visualizar o comparativo abra jornada J versao X e Y');
    return;
  }

  const version = parseInt(document.querySelector('.version').textContent, 10); // Verifique o seletor apropriado
  const elements = document.querySelectorAll('.parent-node');

  const colors = {
    deleted: '#E53935',
    recreated: '#f7c307',
    recreatedUpdated: '#FB8C00',
    updated: '#003d73',
    added: '#146718'
  };

  const blocks = {
    deleted: {{deletedBlocks}},
    recreated: {{recreatedBlocks}},
    recreatedUpdated: {{recreatedUpdatedBlocks}},
    updated: {{updatedBlocks}},
    added: {{addedBlocks}}
  };

  function applyColor(elements, activityList, color) {
    elements.forEach(element => {
      const activityName = element.querySelector('.activity-name').textContent;
      if (activityList.includes(activityName)) {
        element.querySelector('.activity').style.backgroundColor = color;
      }
    });
  }

  if (blocks.deleted.length > 0 && version < newVersion) {
    applyColor(elements, blocks.deleted, colors.deleted);
  }

  if (blocks.recreated.length) {
    applyColor(elements, blocks.recreated, colors.recreated);
  }

  if (blocks.recreatedUpdated.length) {
    applyColor(elements, blocks.recreatedUpdated, colors.recreatedUpdated);
  }

  if (blocks.updated.length) {
    applyColor(elements, blocks.updated, colors.updated);
  }

  if (blocks.added.length && version >= newVersion) {
    applyColor(elements, blocks.added, colors.added);
  }

  function createLegend() {
    const divLegend = document.createElement('div');

    divLegend.innerHTML = `
      <span>${flowName} - ${oldVersion} x ${newVersion}</span>
      <ul>
        <li style='background: ${colors.deleted}'>removidos</li>
        <li style='background: ${colors.recreated}'>recriado</li>
        <li style='background: ${colors.recreatedUpdated}'>recriado e alterado</li>
        <li style='background: ${colors.updated}'>alterado</li>
        <li style='background: ${colors.added}'>incluido</li>
      </ul>
    `;

    const container = document.querySelector('.container');
    container.appendChild(divLegend);
  }

  createLegend();
}

init();
})();
